digraph fullGraph {
	nodesep=1;
	rankdir=TB;
	ranksep="1.5 equally";
	Node_0xc00031a2a0:Node_0xc00031a2a0:anchor->Node_0xc00031a1c0:Node_0xc00031a1c0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00031a380:Node_0xc00031a380:anchor->Node_0xc00031a0e0:Node_0xc00031a0e0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00031a380:Node_0xc00031a380:anchor->Node_0xc00031a1c0:Node_0xc00031a1c0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc00031a460:Node_0xc00031a460:anchor->Node_0xc00031a380:Node_0xc00031a380:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00031a460:Node_0xc00031a460:anchor->Node_0xc00031a000:Node_0xc00031a000:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc00031a540:Node_0xc00031a540:anchor->Node_0xc00031a460:Node_0xc00031a460:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00031a620:Node_0xc00031a620:anchor->Node_0xc00031a540:Node_0xc00031a540:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00031a700:Node_0xc00031a700:anchor->Node_0xc00031a540:Node_0xc00031a540:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00031a8c0:Node_0xc00031a8c0:anchor->Node_0xc00031a620:Node_0xc00031a620:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc00031a8c0:Node_0xc00031a8c0:anchor->Node_0xc00031a700:Node_0xc00031a700:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc00031a9a0:Node_0xc00031a9a0:anchor->Node_0xc00031a8c0:Node_0xc00031a8c0:anchor[ labelfloat=false, taillabel=" 0 " ];
	outsideRoot->insideInputs[ constraint=false, style=invis, weight=999 ];
	outsideExprG->insideExprG[ constraint=false, style=invis, weight=999 ];
	outsideRoot->outsideExprG[ constraint=false, style=invis, weight=999 ];
	insideInputs->insideExprG[ constraint=false, style=invis, weight=999 ];
	subgraph cluster_expressionGraph {
	label=expressionGraph;
	Node_0xc00031a2a0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;"  BGCOLOR="lightblue">

<TR><TD>3</TD><TD>read coefficients :: Vector float64 into &lt;nil&gt; :: NIL</TD></TR>


<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00031a380 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>4</TD><TD>A × b(%1, %2) :: Vector float64</TD></TR>
<TR><TD>Op</TD><TD>A × b :: Matrix a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(3649)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00031a460 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>5</TD><TD>- false(%4, %0) :: Vector float64</TD></TR>
<TR><TD>Op</TD><TD>- false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(3649)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00031a540 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6</TD><TD>squaredError :: Vector float64</TD></TR>
<TR><TD>Op</TD><TD>square :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(3649)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00031a620 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>7</TD><TD>Σ[0](%6) :: float64</TD></TR>
<TR><TD>Op</TD><TD>Σ[0] :: Tensor-0 a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00031a700 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>8</TD><TD>SizeOf=3649(%6) :: float64</TD></TR>
<TR><TD>Op</TD><TD>SizeOf=3649 :: Vector a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00031a8c0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>9</TD><TD>cost :: float64</TD></TR>
<TR><TD>Op</TD><TD>÷ false :: a → a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00031a9a0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;"  BGCOLOR="lightblue">

<TR><TD>a</TD><TD>read cost :: float64 into &lt;nil&gt; :: NIL</TD></TR>


<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	insideExprG [ style=invis ];

}
;
	subgraph inputConsts {
	rank=max;
	subgraph cluster_inputs {
	label=inputs;
	Node_0xc00031a000 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>0</TD><TD>y :: Vector float64</TD></TR>

<TR><TD>Shape</TD><TD>(3649)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (3649) [1]<BR />[17.9  18.8  ⋯ 15.7    13]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00031a0e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>1</TD><TD>x :: Matrix float64</TD></TR>

<TR><TD>Shape</TD><TD>(3649, 1)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (3649, 1) [1 1]<BR />C[20.7  17.9  ⋯ 13.5  15.7]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc00031a1c0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>2</TD><TD>coefficients :: Vector float64</TD></TR>

<TR><TD>Shape</TD><TD>(1)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (1) [1]<BR />[0.44]</TD></TR>


</TABLE>
>, shape=none ];
	insideInputs [ style=invis ];

}
;

}
;
	subgraph outsides {
	outsideExprG [ style=invis ];
	outsideRoot [ style=invis ];

}
;

}
